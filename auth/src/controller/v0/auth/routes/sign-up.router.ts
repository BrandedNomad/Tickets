/**
 *@overview This file contains all the endpoints for the User route
 */

//imports
import express,{Request,Response, Router} from 'express'
import {body, validationResult} from 'express-validator';
import {RequestValidationError} from "../../../../errors/request-validation.error";
import {DatabaseConnectionError} from "../../../../errors/database-connection.error";

//Creating a router
const signupRouter:Router = express.Router();

/**
 * @route sign-up
 * @purpose To sign-up new users
 * @path http://www.myticket.com/api/users/{api-version}/user/signup
 * @method POST
 */
signupRouter.post('/signup',[
    //express-validator middleware for validation of user input
    //appends any error messages onto the req object
    body('email')
        .isEmail()
        .withMessage('Email must be valid'),
    body('password')
        .trim()
        .isLength({min:4,max:20})
        .withMessage('Password must be between 4 and 20 characters long')
],(req:Request, res:Response)=>{

    //validationResult returns all the validation results generated by express-validator middleware
    const errors = validationResult(req);

    //checks if user input is valid
    if(!errors.isEmpty()){
        throw new RequestValidationError(errors.array());
    }

    //extracting user input
    const {email, password} = req.body;

    //creating a new user
    console.log('Creating a user...')

    res.send("success!")
})


//exports
export = signupRouter
